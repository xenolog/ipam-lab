---
all: # keys must be unique, i.e. only one 'hosts' per group
    hosts:
        ${replace(cp.name, "_", "-")}:
            ip: ${cp.network.1.fixed_ip_v4}
            public_ip: ${cp.network.0.fixed_ip_v4}
            etcd_member_name: etcd1
            ansible_port: 22
%{ for num, minion in minions ~}
        ${replace(minion.name, "_", "-")}:
            ansible_port: 220${num}
            ip: ${minion.network.1.fixed_ip_v4}
            public_ip: ${minion.network.0.fixed_ip_v4}
%{ endfor ~}
    vars:
        ansible_ssh_private_key_file: ${ssh_key_file}
        ansible_ssh_user: ubuntu
        ansible_host: ${floating_ip}  # all nodes share one floating IP, but use different ports
        ansible_ssh_common_args: "-o UserKnownHostsFile=/dev/null -o IdentitiesOnly=yes"
        ansible_become: true
        ansible_become_user: root
        # --- kubespray related vars --- #
        cluster_name: ${env_name}.local
        access_ip: ${cp.network.1.fixed_ip_v4}
        kube_network_plugin: ${network_plugin}
        upstream_dns_servers:
            - 8.8.8.8
            - 8.8.4.4
        docker_dns_servers_strict: false  # uncomment this if you want to use more than two upstream_dns_servers
        nameservers:
            - 8.8.8.8
            - 8.8.4.4
        #authorization_modes: AlwaysAllow
        #cloud_provider: openstack
        download_run_once: false
        deploy_netchecker: false
        # Required for hyperkube >=1.3.4. Set to false if installing old hyperkube
        overwrite_hyperkube_cni: true
        enable_network_policy: true
        kube_apiserver_insecure_port: "8080"
    children:
        etcd:
            hosts:
                ${replace(cp.name, "_", "-")}: {}
%{ if network_plugin == "calico" ~}
        calico-rr:
            hosts:
                ${replace(cp.name, "_", "-")}: {}
%{ endif ~}
        kube-master:
            hosts:
                ${replace(cp.name, "_", "-")}: {}
            # vars:
            #     g2_var2: value3
        kube-node:
            hosts:
%{ for num, minion in minions ~}
                ${replace(minion.name, "_", "-")}: {}
%{ endfor ~}
        k8s-cluster:
            children:
                kube-master: {}
                kube-node: {}
                calico-rr: {}
###